[{"/home/pratheek/Desktop/React/React-II/authproject/src/index.js":"1","/home/pratheek/Desktop/React/React-II/authproject/src/App.js":"2","/home/pratheek/Desktop/React/React-II/authproject/src/Login.js":"3","/home/pratheek/Desktop/React/React-II/authproject/src/Home.js":"4","/home/pratheek/Desktop/React/React-II/authproject/src/Register.js":"5","/home/pratheek/Desktop/React/React-II/authproject/src/Form.js":"6","/home/pratheek/Desktop/React/React-II/authproject/src/Account.js":"7","/home/pratheek/Desktop/React/React-II/authproject/src/Logout.js":"8","/home/pratheek/Desktop/React/React-II/authproject/src/notes.js":"9","/home/pratheek/Desktop/React/React-II/authproject/src/Noteslist.js":"10","/home/pratheek/Desktop/React/React-II/authproject/src/noteform.js":"11","/home/pratheek/Desktop/React/React-II/authproject/src/Noteitem.js":"12"},{"size":141,"mtime":1609262481059,"results":"13","hashOfConfig":"14"},{"size":1873,"mtime":1609952426526,"results":"15","hashOfConfig":"14"},{"size":2583,"mtime":1609327040410,"results":"16","hashOfConfig":"14"},{"size":1039,"mtime":1609327165130,"results":"17","hashOfConfig":"14"},{"size":810,"mtime":1609321301931,"results":"18","hashOfConfig":"14"},{"size":2531,"mtime":1609323157266,"results":"19","hashOfConfig":"14"},{"size":1108,"mtime":1609322012464,"results":"20","hashOfConfig":"14"},{"size":842,"mtime":1609326828743,"results":"21","hashOfConfig":"14"},{"size":882,"mtime":1609958868458,"results":"22","hashOfConfig":"14"},{"size":2063,"mtime":1609958945406,"results":"23","hashOfConfig":"14"},{"size":2214,"mtime":1609955964053,"results":"24","hashOfConfig":"14"},{"size":436,"mtime":1609958995643,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"575pw4",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pratheek/Desktop/React/React-II/authproject/src/index.js",[],["56","57"],"/home/pratheek/Desktop/React/React-II/authproject/src/App.js",["58","59","60"],"/home/pratheek/Desktop/React/React-II/authproject/src/Login.js",["61"],"import React, { useState,useEffect } from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport swal from 'sweetalert'\nimport './style/login.css'\n\n\nconst Login =(props) =>{\n    const {handelogin} = props\n    const [login,setLogin] = useState(false)\n    const [email,setemail] =useState(\"\")\n    const [password,setPassword] = useState(\"\")\n    const [formErrors,setFormErrors] =useState({})\n    const errors ={}\n\n    \n    const formSubmit=(data)=>{\n       \n        axios.post(\"http://dct-user-auth.herokuapp.com/users/login\",data)\n        .then((response)=>{\n            const result = response.data;\n            localStorage.setItem(\"token\",result.token)\n            handelogin(result.token);\n            setLogin(true)\n            swal(\"success!\", \"You are logged in!\", \"success\")\n            \n        })\n        .catch((err)=>{\n            console.log(err.message);\n        })\n\n    }\n\n    \n    const handleCancel =(e)=>{\n        window.location.reload()\n    }\n    \n    const runvalidations =()=>{\n        \n        if(email.trim().length === 0){\n            errors.email = 'email cannot be blank'\n        }\n        if(password.trim().length === 0){\n            errors.password = \"password Cannot be blank\"\n        }\n    }\n\n    const handleEmail =(e)=> setemail(e.target.value)\n    const handlepassword =(e) => setPassword(e.target.value)\n\n    const handleSubmit=(e)=>{\n            e.preventDefault()\n            runvalidations()\n    \n            if(Object.keys(errors).length === 0) {\n                setFormErrors({})\n                const formData = {\n                email:email,\n                password : password\n            }\n            formSubmit(formData)\n            // console.log(formData)\n            setemail(\"\")\n            setPassword(\"\")\n            } else {\n                    // console.log('form errors', errors)\n                    setFormErrors(errors)\n                    }\n\n    }\n    \n                \n\n\n    return (<div className=\"form\">\n        <h1>Login</h1>\n        <form onSubmit={handleSubmit}>\n            <input type=\"email\" placeholder=\"email\" onChange={handleEmail}/><br/>{formErrors.email && <span> { formErrors.email } </span>}<br/>\n            <input type=\"password\" placeholder=\"password\" onChange={handlepassword}/><br/>{formErrors.password && <span> { formErrors.password } </span>}<br/>\n            <input type=\"submit\" value=\"Login\" className=\"submit\"/><button className=\"cancel\" onClick={handleCancel}>Cancel</button>\n        </form>\n        {login && <Redirect to=\"/\"/>}\n    </div>)\n}\n\nexport default Login","/home/pratheek/Desktop/React/React-II/authproject/src/Home.js",["62","63","64","65"],"import React from 'react'\nimport{Link} from 'react-router-dom'\nimport './style/home.css'\n\nconst Home =(props)=>{\n    const {token} = props\n    // const {handelogout,isLogin} = this.props\n\n    \n    return (<div>\n        <div className=\"image\">\n            <img src=\"/home.jpeg\"/>\n        </div>\n        <div className =\"content\" className=\"font\">\n        <div className=\"leftcontent\">\n            <p>Authentication is the act of proving an assertion, such as the identity of a computer system user. In contrast with identification, the act of indicating a person or thing's identity, authentication is the process of verifying that identity</p>\n        </div>\n        <div className=\"rightcontent\">\n            <p>Authorization is a process by which a server determines if the client has permission to use a resource or access a file. Authorization is usually coupled with authentication so that the server has some concept of who the client is that is requesting access</p>\n        </div>\n\n        </div>\n    </div>)\n}\n\nexport default Home","/home/pratheek/Desktop/React/React-II/authproject/src/Register.js",["66","67","68","69"],"import React,{useState} from 'react'\nimport axios from 'axios'\nimport {Link, BrowserRouter,Route,Redirect} from 'react-router-dom'\nimport Form from './Form'\nimport swal from 'sweetalert'\n\n\nconst Register =(props)=>{\n    const [registered,setregistered] = useState(false)\n\n    const formSubmit=(data) =>{\n        axios.post(\"http://dct-user-auth.herokuapp.com/users/register\",data)\n        .then((response)=>{\n            const result = response.data;\n            setregistered(true)\n            swal(\"success!\", \"Succesfully Registered\", \"success\")\n            \n        })\n        .catch((err)=>{\n            console.log(err.message);\n        })\n    }\n\n   \n    \n\n\n\n    return (<div>\n        <Form formSubmit={formSubmit}/>\n        { registered && <Redirect to=\"/login\"/>}\n    </div>)\n}\n\nexport default Register","/home/pratheek/Desktop/React/React-II/authproject/src/Form.js",["70"],"import React from 'react'\nimport {useState,useEffect} from 'react'\nimport validator from 'validator'\nimport './style/register.css'\n\n\nconst Form=(props)=>{\n    const {formSubmit} = props\n    const [username,setUsername] = useState(\"\")\n    const [email,setEmail] = useState(\"\")\n    const [password,setPassword] = useState(\"\")\n    const [formErrors,setFormErrors] =useState({})\n    const errors ={}\n    \n    const handleEmail =(e)=> setEmail(e.target.value)\n    const handleName =(e) => setUsername(e.target.value)\n    const handlePassword =(e) => setPassword(e.target.value)\n    // const handleCancel =(e)=> window.reload()\n\n    const handleCancel =(e)=>{\n        window.location.reload()\n    }\n\n    const runValidations = () => {\n        //name\n        if(username.trim().length === 0) {\n            errors.name = 'name cannot be blank'\n        }\n        //email\n        if(email.trim().length === 0) {\n            errors.email = 'email cannot be blank'\n        } else if(!validator.isEmail(email)) {\n            errors.email = 'invalid email format'\n        }\n        if(password.trim().length === 0){\n            errors.password = \"password Cannot be blank\"\n        }\n    }\n\n    const handleSubmit =(e)=>{\n        e.preventDefault()\n        runValidations()\n\n        if(Object.keys(errors).length === 0) {\n            setFormErrors({})\n            const formData = {\n            username:username ,\n            email:email,\n            password : password\n        }\n        formSubmit(formData) \n        // console.log(formData);\n        setUsername(\"\")\n        setEmail(\"\")\n        setPassword(\"\")\n        } else {\n                console.log('form errors', errors)\n                setFormErrors(errors)\n                }\n    }\n    \n    return (<div className=\"form\">\n        <h2>Register With Us</h2>\n        <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Enter username\" onChange={handleName}/><br/>{formErrors.name && <span className=\"font\"> { formErrors.name } </span>}<br/>\n        <input type=\"email\" placeholder=\"Enter email\"onChange={handleEmail}/><br/>{formErrors.email && <span className=\"font\"> { formErrors.email } </span>}<br/>\n        <input type=\"password\" placeholder=\"Enter password\" onChange={handlePassword}/><br/>{formErrors.password && <span className=\"font\"> { formErrors.password } </span>}<br/>\n        <input type=\"submit\" value=\"Register\" className=\"submit\"/><button className=\"cancel\" onClick={handleCancel}>Cancel</button>\n        </form>\n        </div>)\n}\n\nexport default Form","/home/pratheek/Desktop/React/React-II/authproject/src/Account.js",[],"/home/pratheek/Desktop/React/React-II/authproject/src/Logout.js",["71"],"import React,{useEffect,useState} from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\n\nconst Logout =(props)=>{\n    const {handelogout} = props\n    const [token,setToken] = useState(\"\")\n    useEffect(()=>{\n        const token=localStorage.getItem(\"token\")\n        setToken(token)\n\n        axios.delete(\"http://dct-user-auth.herokuapp.com/users/logout\", { headers : { 'x-auth' : token}})\n        .then((response)=>{\n            const result = response.data;\n            console.log(result)\n            setToken(\"\")\n            handelogout()\n            localStorage.clear()\n            \n        })\n        .catch((err)=>{\n            console.log(err.message);\n        })\n    },[])\n   \n    \n    return (<div>\n        { !token ? <Redirect to=\"/\" /> : <Redirect to=\"/logout\"/>}\n\n    </div>)\n}\n\nexport default Logout","/home/pratheek/Desktop/React/React-II/authproject/src/notes.js",["72"],"/home/pratheek/Desktop/React/React-II/authproject/src/Noteslist.js",["73"],"/home/pratheek/Desktop/React/React-II/authproject/src/noteform.js",["74","75","76"],"/home/pratheek/Desktop/React/React-II/authproject/src/Noteitem.js",["77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":35,"nodeType":"85","messageId":"86","endLine":1,"endColumn":44},{"ruleId":"83","severity":1,"message":"87","line":2,"column":44,"nodeType":"85","messageId":"86","endLine":2,"endColumn":54},{"ruleId":"83","severity":1,"message":"88","line":15,"column":12,"nodeType":"85","messageId":"86","endLine":15,"endColumn":19},{"ruleId":"83","severity":1,"message":"89","line":1,"column":26,"nodeType":"85","messageId":"86","endLine":1,"endColumn":35},{"ruleId":"83","severity":1,"message":"90","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":12},{"ruleId":"83","severity":1,"message":"91","line":6,"column":12,"nodeType":"85","messageId":"86","endLine":6,"endColumn":17},{"ruleId":"92","severity":1,"message":"93","line":12,"column":13,"nodeType":"94","endLine":12,"endColumn":36},{"ruleId":"95","severity":1,"message":"96","line":14,"column":35,"nodeType":"97","endLine":14,"endColumn":51},{"ruleId":"83","severity":1,"message":"90","line":3,"column":9,"nodeType":"85","messageId":"86","endLine":3,"endColumn":13},{"ruleId":"83","severity":1,"message":"98","line":3,"column":15,"nodeType":"85","messageId":"86","endLine":3,"endColumn":28},{"ruleId":"83","severity":1,"message":"99","line":3,"column":29,"nodeType":"85","messageId":"86","endLine":3,"endColumn":34},{"ruleId":"83","severity":1,"message":"100","line":14,"column":19,"nodeType":"85","messageId":"86","endLine":14,"endColumn":25},{"ruleId":"83","severity":1,"message":"89","line":2,"column":18,"nodeType":"85","messageId":"86","endLine":2,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":24,"column":7,"nodeType":"103","endLine":24,"endColumn":9,"suggestions":"104"},{"ruleId":"83","severity":1,"message":"91","line":8,"column":12,"nodeType":"85","messageId":"86","endLine":8,"endColumn":17},{"ruleId":"83","severity":1,"message":"89","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"89","line":1,"column":24,"nodeType":"85","messageId":"86","endLine":1,"endColumn":33},{"ruleId":"83","severity":1,"message":"105","line":12,"column":12,"nodeType":"85","messageId":"86","endLine":12,"endColumn":22},{"ruleId":"83","severity":1,"message":"100","line":33,"column":23,"nodeType":"85","messageId":"86","endLine":33,"endColumn":29},{"ruleId":"83","severity":1,"message":"106","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":12},{"ruleId":"83","severity":1,"message":"107","line":7,"column":22,"nodeType":"85","messageId":"86","endLine":7,"endColumn":26},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'isLogIn' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'token' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handelogout'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'formErrors' is assigned a value but never used.","'swal' is defined but never used.","'body' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [handelogout]",{"range":"113","text":"114"},[707,709],"[handelogout]"]