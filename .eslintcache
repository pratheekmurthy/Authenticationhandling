[{"/home/pratheek/Desktop/React/React-II/authproject/src/index.js":"1","/home/pratheek/Desktop/React/React-II/authproject/src/App.js":"2","/home/pratheek/Desktop/React/React-II/authproject/src/Login.js":"3","/home/pratheek/Desktop/React/React-II/authproject/src/Home.js":"4","/home/pratheek/Desktop/React/React-II/authproject/src/Register.js":"5","/home/pratheek/Desktop/React/React-II/authproject/src/Form.js":"6","/home/pratheek/Desktop/React/React-II/authproject/src/Account.js":"7","/home/pratheek/Desktop/React/React-II/authproject/src/Logout.js":"8"},{"size":141,"mtime":1609262481059,"results":"9","hashOfConfig":"10"},{"size":2155,"mtime":1609327057286,"results":"11","hashOfConfig":"10"},{"size":2583,"mtime":1609327040410,"results":"12","hashOfConfig":"10"},{"size":1039,"mtime":1609327165130,"results":"13","hashOfConfig":"10"},{"size":810,"mtime":1609321301931,"results":"14","hashOfConfig":"10"},{"size":2531,"mtime":1609323157266,"results":"15","hashOfConfig":"10"},{"size":1108,"mtime":1609322012464,"results":"16","hashOfConfig":"10"},{"size":842,"mtime":1609326828743,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"575pw4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"20"},"/home/pratheek/Desktop/React/React-II/authproject/src/index.js",[],["41","42"],"/home/pratheek/Desktop/React/React-II/authproject/src/App.js",["43","44","45"],"import React,{useState,useEffect, Component} from 'react'\nimport {Link, BrowserRouter,Route,Redirect,useHistory} from 'react-router-dom'\nimport Register from './Register'\nimport Home from './Home'\nimport Login from './Login'\nimport Account from './Account'\nimport Logout from './Logout'\n\n\n\n\nconst App=(props)=>{\n    const [token,setToken] = useState(\"\")\n    const [isLogIn,setLogin]= useState(false)\n\n\n    \n    useEffect(()=>{\n        const token=localStorage.getItem(\"token\")\n        setToken(token)\n    },[])\n\n    const handelogout =()=>{\n        setToken(\"\")\n        setLogin(false)\n    }\n\n    const handelogin =(token)=>{\n        setToken(token)\n        setLogin(false)\n    }\n\n   \n\n    const PrivateRoute =({component :Component,path,...rest})=>{\n        return <Route path=\"/account\" render={(props)=>{\n            if(token){\n                return <Account {...props}/>\n                \n            }\n            return <Redirect to=\"/login\"/>\n\n        }} />\n    }\n    \n            \n    \n    \n    return (<div> \n        <BrowserRouter>\n        <div className=\"nav\">\n        <Link to=\"/\">Home</Link>|{token ?(<Link to=\"/account\">Account</Link>) : (<Link to=\"/register\">register</Link>) } | {token ?(<Link to=\"/logout\">Logout</Link>) : (<Link to=\"/login\">Login</Link>) }</div>\n        {/* <Route path=\"/\" exact render={()=>{ return <Home handelogout={handelogout} isLogIn={isLogIn}/>}}/> */}\n        \n        {/* <Route path=\"//\" render={(props)=>(<Home {...props} token={token}/>)}/> */}\n        <Route path=\"/\" component={Home} exact={true}/>\n        <Route path=\"/register\" component={Register} exact={true}/>\n        <Route path=\"/login\" render={(props)=>(<Login {...props} handelogin={handelogin}/>)}/>\n        {/* <Route path=\"/login\" component={Login} exact={true}/> */}\n        {/* <Route path =\"/account\" component={Account} exact={true}/> */}\n        <Route path=\"/logout\" render={(props)=>(<Logout {...props} handelogout={handelogout}/>)}/>\n        {/* <Route path=\"/logout\" component={Logout} exact={true}/> */}\n        <PrivateRoute path=\"/account\" component={Account}/>\n       \n        </BrowserRouter>\n    </div>)\n}\n\n\nexport default App","/home/pratheek/Desktop/React/React-II/authproject/src/Login.js",["46"],"import React, { useState,useEffect } from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport swal from 'sweetalert'\nimport './style/login.css'\n\n\nconst Login =(props) =>{\n    const {handelogin} = props\n    const [login,setLogin] = useState(false)\n    const [email,setemail] =useState(\"\")\n    const [password,setPassword] = useState(\"\")\n    const [formErrors,setFormErrors] =useState({})\n    const errors ={}\n\n    \n    const formSubmit=(data)=>{\n       \n        axios.post(\"http://dct-user-auth.herokuapp.com/users/login\",data)\n        .then((response)=>{\n            const result = response.data;\n            localStorage.setItem(\"token\",result.token)\n            handelogin(result.token);\n            setLogin(true)\n            swal(\"success!\", \"You are logged in!\", \"success\")\n            \n        })\n        .catch((err)=>{\n            console.log(err.message);\n        })\n\n    }\n\n    \n    const handleCancel =(e)=>{\n        window.location.reload()\n    }\n    \n    const runvalidations =()=>{\n        \n        if(email.trim().length === 0){\n            errors.email = 'email cannot be blank'\n        }\n        if(password.trim().length === 0){\n            errors.password = \"password Cannot be blank\"\n        }\n    }\n\n    const handleEmail =(e)=> setemail(e.target.value)\n    const handlepassword =(e) => setPassword(e.target.value)\n\n    const handleSubmit=(e)=>{\n            e.preventDefault()\n            runvalidations()\n    \n            if(Object.keys(errors).length === 0) {\n                setFormErrors({})\n                const formData = {\n                email:email,\n                password : password\n            }\n            formSubmit(formData)\n            // console.log(formData)\n            setemail(\"\")\n            setPassword(\"\")\n            } else {\n                    // console.log('form errors', errors)\n                    setFormErrors(errors)\n                    }\n\n    }\n    \n                \n\n\n    return (<div className=\"form\">\n        <h1>Login</h1>\n        <form onSubmit={handleSubmit}>\n            <input type=\"email\" placeholder=\"email\" onChange={handleEmail}/><br/>{formErrors.email && <span> { formErrors.email } </span>}<br/>\n            <input type=\"password\" placeholder=\"password\" onChange={handlepassword}/><br/>{formErrors.password && <span> { formErrors.password } </span>}<br/>\n            <input type=\"submit\" value=\"Login\" className=\"submit\"/><button className=\"cancel\" onClick={handleCancel}>Cancel</button>\n        </form>\n        {login && <Redirect to=\"/\"/>}\n    </div>)\n}\n\nexport default Login","/home/pratheek/Desktop/React/React-II/authproject/src/Home.js",["47","48","49","50"],"import React from 'react'\nimport{Link} from 'react-router-dom'\nimport './style/home.css'\n\nconst Home =(props)=>{\n    const {token} = props\n    // const {handelogout,isLogin} = this.props\n\n    \n    return (<div>\n        <div className=\"image\">\n            <img src=\"/home.jpeg\"/>\n        </div>\n        <div className =\"content\" className=\"font\">\n        <div className=\"leftcontent\">\n            <p>Authentication is the act of proving an assertion, such as the identity of a computer system user. In contrast with identification, the act of indicating a person or thing's identity, authentication is the process of verifying that identity</p>\n        </div>\n        <div className=\"rightcontent\">\n            <p>Authorization is a process by which a server determines if the client has permission to use a resource or access a file. Authorization is usually coupled with authentication so that the server has some concept of who the client is that is requesting access</p>\n        </div>\n\n        </div>\n    </div>)\n}\n\nexport default Home","/home/pratheek/Desktop/React/React-II/authproject/src/Register.js",["51","52","53","54"],"import React,{useState} from 'react'\nimport axios from 'axios'\nimport {Link, BrowserRouter,Route,Redirect} from 'react-router-dom'\nimport Form from './Form'\nimport swal from 'sweetalert'\n\n\nconst Register =(props)=>{\n    const [registered,setregistered] = useState(false)\n\n    const formSubmit=(data) =>{\n        axios.post(\"http://dct-user-auth.herokuapp.com/users/register\",data)\n        .then((response)=>{\n            const result = response.data;\n            setregistered(true)\n            swal(\"success!\", \"Succesfully Registered\", \"success\")\n            \n        })\n        .catch((err)=>{\n            console.log(err.message);\n        })\n    }\n\n   \n    \n\n\n\n    return (<div>\n        <Form formSubmit={formSubmit}/>\n        { registered && <Redirect to=\"/login\"/>}\n    </div>)\n}\n\nexport default Register","/home/pratheek/Desktop/React/React-II/authproject/src/Form.js",["55"],"import React from 'react'\nimport {useState,useEffect} from 'react'\nimport validator from 'validator'\nimport './style/register.css'\n\n\nconst Form=(props)=>{\n    const {formSubmit} = props\n    const [username,setUsername] = useState(\"\")\n    const [email,setEmail] = useState(\"\")\n    const [password,setPassword] = useState(\"\")\n    const [formErrors,setFormErrors] =useState({})\n    const errors ={}\n    \n    const handleEmail =(e)=> setEmail(e.target.value)\n    const handleName =(e) => setUsername(e.target.value)\n    const handlePassword =(e) => setPassword(e.target.value)\n    // const handleCancel =(e)=> window.reload()\n\n    const handleCancel =(e)=>{\n        window.location.reload()\n    }\n\n    const runValidations = () => {\n        //name\n        if(username.trim().length === 0) {\n            errors.name = 'name cannot be blank'\n        }\n        //email\n        if(email.trim().length === 0) {\n            errors.email = 'email cannot be blank'\n        } else if(!validator.isEmail(email)) {\n            errors.email = 'invalid email format'\n        }\n        if(password.trim().length === 0){\n            errors.password = \"password Cannot be blank\"\n        }\n    }\n\n    const handleSubmit =(e)=>{\n        e.preventDefault()\n        runValidations()\n\n        if(Object.keys(errors).length === 0) {\n            setFormErrors({})\n            const formData = {\n            username:username ,\n            email:email,\n            password : password\n        }\n        formSubmit(formData) \n        // console.log(formData);\n        setUsername(\"\")\n        setEmail(\"\")\n        setPassword(\"\")\n        } else {\n                console.log('form errors', errors)\n                setFormErrors(errors)\n                }\n    }\n    \n    return (<div className=\"form\">\n        <h2>Register With Us</h2>\n        <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Enter username\" onChange={handleName}/><br/>{formErrors.name && <span className=\"font\"> { formErrors.name } </span>}<br/>\n        <input type=\"email\" placeholder=\"Enter email\"onChange={handleEmail}/><br/>{formErrors.email && <span className=\"font\"> { formErrors.email } </span>}<br/>\n        <input type=\"password\" placeholder=\"Enter password\" onChange={handlePassword}/><br/>{formErrors.password && <span className=\"font\"> { formErrors.password } </span>}<br/>\n        <input type=\"submit\" value=\"Register\" className=\"submit\"/><button className=\"cancel\" onClick={handleCancel}>Cancel</button>\n        </form>\n        </div>)\n}\n\nexport default Form","/home/pratheek/Desktop/React/React-II/authproject/src/Account.js",[],"/home/pratheek/Desktop/React/React-II/authproject/src/Logout.js",["56"],"import React,{useEffect,useState} from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\n\nconst Logout =(props)=>{\n    const {handelogout} = props\n    const [token,setToken] = useState(\"\")\n    useEffect(()=>{\n        const token=localStorage.getItem(\"token\")\n        setToken(token)\n\n        axios.delete(\"http://dct-user-auth.herokuapp.com/users/logout\", { headers : { 'x-auth' : token}})\n        .then((response)=>{\n            const result = response.data;\n            console.log(result)\n            setToken(\"\")\n            handelogout()\n            localStorage.clear()\n            \n        })\n        .catch((err)=>{\n            console.log(err.message);\n        })\n    },[])\n   \n    \n    return (<div>\n        { !token ? <Redirect to=\"/\" /> : <Redirect to=\"/logout\"/>}\n\n    </div>)\n}\n\nexport default Logout",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":35,"nodeType":"63","messageId":"64","endLine":1,"endColumn":44},{"ruleId":"61","severity":1,"message":"65","line":2,"column":44,"nodeType":"63","messageId":"64","endLine":2,"endColumn":54},{"ruleId":"61","severity":1,"message":"66","line":14,"column":12,"nodeType":"63","messageId":"64","endLine":14,"endColumn":19},{"ruleId":"61","severity":1,"message":"67","line":1,"column":26,"nodeType":"63","messageId":"64","endLine":1,"endColumn":35},{"ruleId":"61","severity":1,"message":"68","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":12},{"ruleId":"61","severity":1,"message":"69","line":6,"column":12,"nodeType":"63","messageId":"64","endLine":6,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":12,"column":13,"nodeType":"72","endLine":12,"endColumn":36},{"ruleId":"73","severity":1,"message":"74","line":14,"column":35,"nodeType":"75","endLine":14,"endColumn":51},{"ruleId":"61","severity":1,"message":"68","line":3,"column":9,"nodeType":"63","messageId":"64","endLine":3,"endColumn":13},{"ruleId":"61","severity":1,"message":"76","line":3,"column":15,"nodeType":"63","messageId":"64","endLine":3,"endColumn":28},{"ruleId":"61","severity":1,"message":"77","line":3,"column":29,"nodeType":"63","messageId":"64","endLine":3,"endColumn":34},{"ruleId":"61","severity":1,"message":"78","line":14,"column":19,"nodeType":"63","messageId":"64","endLine":14,"endColumn":25},{"ruleId":"61","severity":1,"message":"67","line":2,"column":18,"nodeType":"63","messageId":"64","endLine":2,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":24,"column":7,"nodeType":"81","endLine":24,"endColumn":9,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'isLogIn' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'token' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handelogout'. Either include it or remove the dependency array.","ArrayExpression",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [handelogout]",{"range":"88","text":"89"},[707,709],"[handelogout]"]