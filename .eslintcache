[{"/home/pratheek/Desktop/React/React-II/authproject/src/index.js":"1","/home/pratheek/Desktop/React/React-II/authproject/src/App.js":"2","/home/pratheek/Desktop/React/React-II/authproject/src/Login.js":"3","/home/pratheek/Desktop/React/React-II/authproject/src/Home.js":"4","/home/pratheek/Desktop/React/React-II/authproject/src/Register.js":"5","/home/pratheek/Desktop/React/React-II/authproject/src/Form.js":"6","/home/pratheek/Desktop/React/React-II/authproject/src/Account.js":"7","/home/pratheek/Desktop/React/React-II/authproject/src/Logout.js":"8","/home/pratheek/Desktop/React/React-II/authproject/src/notes.js":"9","/home/pratheek/Desktop/React/React-II/authproject/src/Noteslist.js":"10","/home/pratheek/Desktop/React/React-II/authproject/src/noteform.js":"11","/home/pratheek/Desktop/React/React-II/authproject/src/Noteitem.js":"12"},{"size":140,"mtime":1609997868254,"results":"13","hashOfConfig":"14"},{"size":1908,"mtime":1610606196925,"results":"15","hashOfConfig":"14"},{"size":3050,"mtime":1610602192261,"results":"16","hashOfConfig":"14"},{"size":1039,"mtime":1609327165130,"results":"17","hashOfConfig":"14"},{"size":810,"mtime":1609321301931,"results":"18","hashOfConfig":"14"},{"size":3045,"mtime":1610601137462,"results":"19","hashOfConfig":"14"},{"size":1298,"mtime":1610602743352,"results":"20","hashOfConfig":"14"},{"size":842,"mtime":1609326828743,"results":"21","hashOfConfig":"14"},{"size":930,"mtime":1610165867823,"results":"22","hashOfConfig":"14"},{"size":1548,"mtime":1610604373186,"results":"23","hashOfConfig":"14"},{"size":2888,"mtime":1610604918998,"results":"24","hashOfConfig":"14"},{"size":1458,"mtime":1610604959300,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"575pw4",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"28"},"/home/pratheek/Desktop/React/React-II/authproject/src/index.js",[],["60","61"],"/home/pratheek/Desktop/React/React-II/authproject/src/App.js",["62","63"],"/home/pratheek/Desktop/React/React-II/authproject/src/Login.js",["64"],"import React, { useState,useEffect } from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport swal from 'sweetalert'\nimport './style/login.css'\n\n\nconst Login =(props) =>{\n    const {handelogin} = props\n    const [login,setLogin] = useState(false)\n    const [email,setemail] =useState(\"\")\n    const [password,setPassword] = useState(\"\")\n    const [formErrors,setFormErrors] =useState({})\n    const errors ={}\n\n    \n    const formSubmit=(data)=>{\n       \n        axios.post(\"http://dct-user-auth.herokuapp.com/users/login\",data)\n        .then((response)=>{\n            const result = response.data;\n            localStorage.setItem(\"token\",result.token)\n            handelogin(result.token);\n            setLogin(true)\n            swal(\"success!\", \"You are logged in!\", \"success\")\n            \n        })\n        .catch((err)=>{\n            console.log(err.message);\n        })\n\n    }\n\n    \n    const handleCancel =(e)=>{\n        window.location.reload()\n    }\n    \n    const runvalidations =()=>{\n        \n        if(email.trim().length === 0){\n            errors.email = 'email cannot be blank'\n        }\n        if(password.trim().length === 0){\n            errors.password = \"password Cannot be blank\"\n        }\n    }\n\n    const handleEmail =(e)=> setemail(e.target.value)\n    const handlepassword =(e) => setPassword(e.target.value)\n\n    const handleSubmit=(e)=>{\n            e.preventDefault()\n            runvalidations()\n    \n            if(Object.keys(errors).length === 0) {\n                setFormErrors({})\n                const formData = {\n                email:email,\n                password : password\n            }\n            formSubmit(formData)\n            // console.log(formData)\n            setemail(\"\")\n            setPassword(\"\")\n            } else {\n                    // console.log('form errors', errors)\n                    setFormErrors(errors)\n                    }\n\n    }\n    \n                \n\n\n    return (<div className=\"form\">\n        <h1>Login</h1>\n        <form onSubmit={handleSubmit}>\n        <div class=\"form-floating mb-3\">\n  <input type=\"email\" class=\"form-control\" id=\"floatingInput\" placeholder=\"Enter your Email-id\" onChange={handleEmail}/>{formErrors.email && <span> { formErrors.email } </span>}\n</div>\n<div class=\"form-floating\">\n  <input type=\"password\" class=\"form-control\" id=\"floatingPassword\" placeholder=\"Enter your Password\" onChange={handlepassword}/>{formErrors.password && <span> { formErrors.password } </span>}\n</div><br/>\n            {/* <input type=\"email\" placeholder=\"email\" onChange={handleEmail}/><br/>{formErrors.email && <span> { formErrors.email } </span>}<br/>\n            <input type=\"password\" placeholder=\"password\" onChange={handlepassword}/><br/>{formErrors.password && <span> { formErrors.password } </span>}<br/> */}\n            <input type=\"submit\" value=\"Login\" className=\"submit\"/><button className=\"cancel\" onClick={handleCancel}>Cancel</button>\n        </form>\n        {login && <Redirect to=\"/\"/>}\n    </div>)\n}\n\nexport default Login","/home/pratheek/Desktop/React/React-II/authproject/src/Home.js",["65","66","67","68"],"import React from 'react'\nimport{Link} from 'react-router-dom'\nimport './style/home.css'\n\nconst Home =(props)=>{\n    const {token} = props\n    // const {handelogout,isLogin} = this.props\n\n    \n    return (<div>\n        <div className=\"image\">\n            <img src=\"/home.jpeg\"/>\n        </div>\n        <div className =\"content\" className=\"font\">\n        <div className=\"leftcontent\">\n            <p>Authentication is the act of proving an assertion, such as the identity of a computer system user. In contrast with identification, the act of indicating a person or thing's identity, authentication is the process of verifying that identity</p>\n        </div>\n        <div className=\"rightcontent\">\n            <p>Authorization is a process by which a server determines if the client has permission to use a resource or access a file. Authorization is usually coupled with authentication so that the server has some concept of who the client is that is requesting access</p>\n        </div>\n\n        </div>\n    </div>)\n}\n\nexport default Home","/home/pratheek/Desktop/React/React-II/authproject/src/Register.js",["69","70","71","72"],"import React,{useState} from 'react'\nimport axios from 'axios'\nimport {Link, BrowserRouter,Route,Redirect} from 'react-router-dom'\nimport Form from './Form'\nimport swal from 'sweetalert'\n\n\nconst Register =(props)=>{\n    const [registered,setregistered] = useState(false)\n\n    const formSubmit=(data) =>{\n        axios.post(\"http://dct-user-auth.herokuapp.com/users/register\",data)\n        .then((response)=>{\n            const result = response.data;\n            setregistered(true)\n            swal(\"success!\", \"Succesfully Registered\", \"success\")\n            \n        })\n        .catch((err)=>{\n            console.log(err.message);\n        })\n    }\n\n   \n    \n\n\n\n    return (<div>\n        <Form formSubmit={formSubmit}/>\n        { registered && <Redirect to=\"/login\"/>}\n    </div>)\n}\n\nexport default Register","/home/pratheek/Desktop/React/React-II/authproject/src/Form.js",["73"],"import React from 'react'\nimport {useState,useEffect} from 'react'\nimport validator from 'validator'\nimport './style/register.css'\n\n\nconst Form=(props)=>{\n    const {formSubmit} = props\n    const [username,setUsername] = useState(\"\")\n    const [email,setEmail] = useState(\"\")\n    const [password,setPassword] = useState(\"\")\n    const [formErrors,setFormErrors] =useState({})\n    const errors ={}\n    \n    const handleEmail =(e)=> setEmail(e.target.value)\n    const handleName =(e) => setUsername(e.target.value)\n    const handlePassword =(e) => setPassword(e.target.value)\n    // const handleCancel =(e)=> window.reload()\n\n    const handleCancel =(e)=>{\n        window.location.reload()\n    }\n\n    const runValidations = () => {\n        //name\n        if(username.trim().length === 0) {\n            errors.name = 'name cannot be blank'\n        }\n        //email\n        if(email.trim().length === 0) {\n            errors.email = 'email cannot be blank'\n        } else if(!validator.isEmail(email)) {\n            errors.email = 'invalid email format'\n        }\n        if(password.trim().length === 0){\n            errors.password = \"password Cannot be blank\"\n        }\n    }\n\n    const handleSubmit =(e)=>{\n        e.preventDefault()\n        runValidations()\n\n        if(Object.keys(errors).length === 0) {\n            setFormErrors({})\n            const formData = {\n            username:username ,\n            email:email,\n            password : password\n        }\n        formSubmit(formData) \n        // console.log(formData);\n        setUsername(\"\")\n        setEmail(\"\")\n        setPassword(\"\")\n        } else {\n                console.log('form errors', errors)\n                setFormErrors(errors)\n                }\n    }\n    \n    return (<div className=\"form\">\n        <h2 class=\"fs-2\"> Register With Us</h2>\n        <form onSubmit={handleSubmit}>\n        <div class=\"input-group flex-nowrap\">\n  <span class=\"input-group-text\" id=\"addon-wrapping\">@</span>\n  <input type=\"text\" class=\"form-control\" placeholder=\"Enter your User Name\" aria-label=\"Username\" aria-describedby=\"addon-wrapping\" onChange={handleName} /></div>{formErrors.name && <span className=\"font\"> { formErrors.name } </span>}<br/>\n  <div class=\"input-group mb-3\">\n  <input type=\"text\" class=\"form-control\" placeholder=\"Enter your email\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" onChange={handleEmail}/>\n  <span class=\"input-group-text\" id=\"basic-addon2\">@example.com</span></div><br/>{formErrors.email && <span className=\"font\"> { formErrors.email } </span>}\n  <div class=\"input-group mb-3\">\n  <input type=\"password\" class=\"form-control\" placeholder=\"Enter Password\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" onChange={handlePassword}/>\n</div>  {formErrors.password && <span className=\"font\"> { formErrors.password } </span>}\n        <input type=\"submit\" value=\"Register\" class=\"btn btn-success\"/><button class=\"btn btn-danger\" onClick={handleCancel}>Cancel</button>\n        </form>\n        </div>)\n}\n\nexport default Form","/home/pratheek/Desktop/React/React-II/authproject/src/Account.js",[],"/home/pratheek/Desktop/React/React-II/authproject/src/Logout.js",["74"],"import React,{useEffect,useState} from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\n\nconst Logout =(props)=>{\n    const {handelogout} = props\n    const [token,setToken] = useState(\"\")\n    useEffect(()=>{\n        const token=localStorage.getItem(\"token\")\n        setToken(token)\n\n        axios.delete(\"http://dct-user-auth.herokuapp.com/users/logout\", { headers : { 'x-auth' : token}})\n        .then((response)=>{\n            const result = response.data;\n            console.log(result)\n            setToken(\"\")\n            handelogout()\n            localStorage.clear()\n            \n        })\n        .catch((err)=>{\n            console.log(err.message);\n        })\n    },[])\n   \n    \n    return (<div>\n        { !token ? <Redirect to=\"/\" /> : <Redirect to=\"/logout\"/>}\n\n    </div>)\n}\n\nexport default Logout","/home/pratheek/Desktop/React/React-II/authproject/src/notes.js",["75"],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport NotesList from './Noteslist'\nimport NoteForm from './noteform'\n\nconst Notes =(props)=>{\n    const [notes,setNotes] = useState([])\n    const [token,setToken] = useState(\"\")\n\n        useEffect(()=>{\n            const token=localStorage.getItem(\"token\")\n            setToken(token)\n    \n            axios.get(\"http://dct-user-auth.herokuapp.com/api/notes\", { headers : { 'x-auth' : token}})\n            .then((response)=>{\n                const result = response.data;\n                // console.log(result)\n                setNotes(result);\n                \n            })\n            .catch((err)=>{\n                console.log(err.message);\n            })\n        },[])\n        \n        \n\n    return (<div>\n       <NotesList notes={notes} setNotes={setNotes} />\n       <NoteForm notes={notes} setNotes={setNotes}/>\n    </div>)\n}\n\nexport default Notes","/home/pratheek/Desktop/React/React-II/authproject/src/Noteslist.js",["76","77","78"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Noteitem from './Noteitem'\nimport swal from 'sweetalert'\n\nconst NotesList =(props)=>{\n    const {notes,setNotes,remove} = props\n    \n    \n    const showifnfo =(id)=>{\n        axios.get(`http://dct-user-auth.herokuapp.com/api/notes/${id}`,{\n            headers :{\n                \"x-auth\" : localStorage.getItem(\"token\")\n            }\n        })\n            .then((response)=>{\n                const result=response.data\n                console.log(result)\n                swal(`Title - ${result.title} \n                Body - ${result.body}`)     \n          })\n            .catch((err)=>{\n                alert(err.message)\n            })\n            \n            \n    }\n\n    \n    \n\n    \n\n    return (<div>\n        {notes.length === 0 ? (<div>\n            <h4>No Tasks found</h4>\n            <p>Add Your first task</p>\n            </div>\n            ):(\n                <div>\n                    <h4>My tasks - {notes.length}</h4>\n                    {\n                        notes.map((note)=>{\n                            return (\n                                // <Taskitem key={task.id} {...task} removeitem={removeitem} edititem={edititem}/>\n                                <Noteitem key={note._id} {...note} showifnfo={showifnfo}  notes={notes} setNotes={setNotes}/>\n                                \n                            )\n                        })\n                    }\n                </div>\n            )}\n    </div>)\n}\n\nexport default NotesList","/home/pratheek/Desktop/React/React-II/authproject/src/noteform.js",["79","80"],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport './style/login.css'\nimport './style/addform.css'\nimport swal from 'sweetalert'\n\n\n\n\nconst NoteForm =(props)=>{\n    const {notes,setNotes} = props\n    // const {formSubmit,isSaved,toggleIsSaved, id: slno, title:tasktitle,status :taskstatus} = props\n    // const {formSubmit} = props\n    const [title,setTitle] = useState(\"\")\n    const [body,setbody] =useState(\"\")\n    const [formErrors,setFormErrors] =useState({})\n    const errors ={}\n\n    // useEffect(()=>{\n    //    if(isSaved){\n    //        setSattus(false)\n    //        setTitle(\"\")\n    //        setId(uuidv4())\n    //        toggleIsSaved()\n    //    }\n\n    // },[isSaved])\n\n    const add=(note)=>{\n        setNotes([note,...notes])\n    }\n    \n    const formSubmit =(note)=>{\n        console.log(note)\n        \n        axios.post(\"http://dct-user-auth.herokuapp.com/api/notes\",note,{\n            headers :{\n                \"x-auth\" : localStorage.getItem(\"token\")\n            }\n        })\n            .then((response)=>{\n                const result=response.data\n                add(result)\n                swal(\"success!\", \"Succesfully Task Added\", \"success\")\n                \n                \n          })\n            .catch((err)=>{\n                alert(err.message)\n            })\n            \n        \n           \n    }\n\n    const runValidations =()=>{\n        if(title.trim().length === 0){\n            errors.name = 'title cannot be blank'\n        }\n\n    }\n\n    const handleTitle =(e)=>{\n        setTitle(e.target.value)\n    }\n\n    const handlebody =(e)=>{\n        setbody (e.target.value)\n    }\n\n    const handleSubmit =(e)=>{\n        e.preventDefault()\n        runValidations()\n\n        if(Object.keys(errors).length === 0) {\n            setFormErrors({})\n            console.log(body)\n            const formData = {\n                title:title,\n                body:body\n        }\n        formSubmit(formData)\n        setTitle(\"\")\n        setbody(\"\")\n        } else {\n                console.log('form errors', errors)\n                setFormErrors(errors)\n                }\n\n    }\n    \n    \n    return (<div className=\"form1\">\n    <div className=\"cardsize1\">\n        <form onSubmit ={handleSubmit}>\n        <div class=\"card\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">Add New Task</h5>\n            <div class=\"mb-3\">\n        <input type=\"text\" class=\"form-control\" value ={title} id=\"formGroupExampleInput\" placeholder=\"Task Title\"  onChange={handleTitle} />\n        </div>\n        <div class=\"form-floating\">\n        <textarea class=\"form-control\" value={body}onChange={handlebody} placeholder=\"Task Details\" id=\"floatingTextarea2\" ></textarea>\n        </div><br/>\n        <input type =\"submit\" value=\"Add\" class=\"btn btn-success\"/>\n  </div>\n</div>     \n</form>\n    </div>\n    </div>)\n}\n\nexport default NoteForm","/home/pratheek/Desktop/React/React-II/authproject/src/Noteitem.js",["81"],"import React from 'react'\nimport swal from 'sweetalert'\nimport axios from 'axios'\nimport './style/login.css'\n\n\n\nconst Noteitem =(props)=>{\n    const {_id,title,body,showifnfo,notes,setNotes} = props\n\n    const showdetails=(e)=>{\n        showifnfo(_id)\n    }\n    \n    const remove=(id)=>{\n        console.log(id)\n        const updated = notes.filter((note)=>{\n            return note._id !== id\n        })\n        console.log(updated);\n        setNotes(updated)\n       \n    }\n\n    \n    const removeNote =(id)=>{\n        // console.log(id)\n        const confirm = window.confirm(\" Are sure want to remove?\")\n        if(confirm){\n\n        axios.delete(`http://dct-user-auth.herokuapp.com/api/notes/${id}`,{\n            headers :{\n                \"x-auth\" : localStorage.getItem(\"token\")\n            }\n        })\n            .then((response)=>{\n                const result=response.data\n                remove(result._id)\n                console.log(result._id)\n                swal(`Good Job`)      \n                   \n          })\n            .catch((err)=>{\n                alert(err.message)\n            })\n            \n    }\n    }\n    \n\n    return (<div className=\"cardsize\">\n        <div class=\"card\">\n  <div class=\"card-body\">\n  <h3 onClick={showdetails}>{title}</h3>\n        <button  class=\"btn btn-success\" onClick={()=>{\n            removeNote(_id)\n        }}>Work Done</button>\n  </div>\n</div>\n       \n        \n    </div>)\n}\n\nexport default Noteitem",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":35,"nodeType":"88","messageId":"89","endLine":1,"endColumn":44},{"ruleId":"86","severity":1,"message":"90","line":16,"column":12,"nodeType":"88","messageId":"89","endLine":16,"endColumn":19},{"ruleId":"86","severity":1,"message":"91","line":1,"column":26,"nodeType":"88","messageId":"89","endLine":1,"endColumn":35},{"ruleId":"86","severity":1,"message":"92","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":12},{"ruleId":"86","severity":1,"message":"93","line":6,"column":12,"nodeType":"88","messageId":"89","endLine":6,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":12,"column":13,"nodeType":"96","endLine":12,"endColumn":36},{"ruleId":"97","severity":1,"message":"98","line":14,"column":35,"nodeType":"99","endLine":14,"endColumn":51},{"ruleId":"86","severity":1,"message":"92","line":3,"column":9,"nodeType":"88","messageId":"89","endLine":3,"endColumn":13},{"ruleId":"86","severity":1,"message":"100","line":3,"column":15,"nodeType":"88","messageId":"89","endLine":3,"endColumn":28},{"ruleId":"86","severity":1,"message":"101","line":3,"column":29,"nodeType":"88","messageId":"89","endLine":3,"endColumn":34},{"ruleId":"86","severity":1,"message":"102","line":14,"column":19,"nodeType":"88","messageId":"89","endLine":14,"endColumn":25},{"ruleId":"86","severity":1,"message":"91","line":2,"column":18,"nodeType":"88","messageId":"89","endLine":2,"endColumn":27},{"ruleId":"103","severity":1,"message":"104","line":24,"column":7,"nodeType":"105","endLine":24,"endColumn":9,"suggestions":"106"},{"ruleId":"86","severity":1,"message":"93","line":8,"column":12,"nodeType":"88","messageId":"89","endLine":8,"endColumn":17},{"ruleId":"86","severity":1,"message":"91","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"107","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"108","line":7,"column":27,"nodeType":"88","messageId":"89","endLine":7,"endColumn":33},{"ruleId":"86","severity":1,"message":"91","line":1,"column":24,"nodeType":"88","messageId":"89","endLine":1,"endColumn":33},{"ruleId":"86","severity":1,"message":"109","line":16,"column":12,"nodeType":"88","messageId":"89","endLine":16,"endColumn":22},{"ruleId":"86","severity":1,"message":"110","line":9,"column":22,"nodeType":"88","messageId":"89","endLine":9,"endColumn":26},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'isLogIn' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'token' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handelogout'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'useState' is defined but never used.","'remove' is assigned a value but never used.","'formErrors' is assigned a value but never used.","'body' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [handelogout]",{"range":"116","text":"117"},[707,709],"[handelogout]"]